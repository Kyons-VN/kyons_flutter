// Mocks generated by Mockito 5.4.4 from annotations
// in kyons_flutter/test/authentication/data/auth_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i12;

import 'package:dio/dio.dart' as _i8;
import 'package:dio/src/adapter.dart' as _i3;
import 'package:dio/src/cancel_token.dart' as _i13;
import 'package:dio/src/dio_mixin.dart' as _i5;
import 'package:dio/src/options.dart' as _i2;
import 'package:dio/src/response.dart' as _i6;
import 'package:dio/src/transformer.dart' as _i4;
import 'package:fpdart/fpdart.dart' as _i15;
import 'package:kyons_flutter/src/authentication/data/auth_entities.dart'
    as _i11;
import 'package:kyons_flutter/src/authentication/data/auth_service.dart'
    as _i16;
import 'package:kyons_flutter/src/authentication/domain/value_objects.dart'
    as _i17;
import 'package:kyons_flutter/src/core/data/api.dart' as _i10;
import 'package:kyons_flutter/src/core/data/shared.dart' as _i7;
import 'package:kyons_flutter/src/knowledge/domain/i_knowledge.dart' as _i18;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i14;
import 'package:shared_preferences/shared_preferences.dart' as _i9;

import 'auth_service_test.dart' as _i19;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeBaseOptions_0 extends _i1.SmartFake implements _i2.BaseOptions {
  _FakeBaseOptions_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeHttpClientAdapter_1 extends _i1.SmartFake
    implements _i3.HttpClientAdapter {
  _FakeHttpClientAdapter_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTransformer_2 extends _i1.SmartFake implements _i4.Transformer {
  _FakeTransformer_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeInterceptors_3 extends _i1.SmartFake implements _i5.Interceptors {
  _FakeInterceptors_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_4<T1> extends _i1.SmartFake implements _i6.Response<T1> {
  _FakeResponse_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSharedRefService_5 extends _i1.SmartFake
    implements _i7.SharedRefService {
  _FakeSharedRefService_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDio_6 extends _i1.SmartFake implements _i8.Dio {
  _FakeDio_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSharedPreferences_7 extends _i1.SmartFake
    implements _i9.SharedPreferences {
  _FakeSharedPreferences_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeApi_8 extends _i1.SmartFake implements _i10.Api {
  _FakeApi_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUser_9 extends _i1.SmartFake implements _i11.User {
  _FakeUser_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [Dio].
///
/// See the documentation for Mockito's code generation for more information.
class MockDio extends _i1.Mock implements _i8.Dio {
  @override
  _i2.BaseOptions get options => (super.noSuchMethod(
        Invocation.getter(#options),
        returnValue: _FakeBaseOptions_0(
          this,
          Invocation.getter(#options),
        ),
        returnValueForMissingStub: _FakeBaseOptions_0(
          this,
          Invocation.getter(#options),
        ),
      ) as _i2.BaseOptions);

  @override
  set options(_i2.BaseOptions? _options) => super.noSuchMethod(
        Invocation.setter(
          #options,
          _options,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.HttpClientAdapter get httpClientAdapter => (super.noSuchMethod(
        Invocation.getter(#httpClientAdapter),
        returnValue: _FakeHttpClientAdapter_1(
          this,
          Invocation.getter(#httpClientAdapter),
        ),
        returnValueForMissingStub: _FakeHttpClientAdapter_1(
          this,
          Invocation.getter(#httpClientAdapter),
        ),
      ) as _i3.HttpClientAdapter);

  @override
  set httpClientAdapter(_i3.HttpClientAdapter? _httpClientAdapter) =>
      super.noSuchMethod(
        Invocation.setter(
          #httpClientAdapter,
          _httpClientAdapter,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Transformer get transformer => (super.noSuchMethod(
        Invocation.getter(#transformer),
        returnValue: _FakeTransformer_2(
          this,
          Invocation.getter(#transformer),
        ),
        returnValueForMissingStub: _FakeTransformer_2(
          this,
          Invocation.getter(#transformer),
        ),
      ) as _i4.Transformer);

  @override
  set transformer(_i4.Transformer? _transformer) => super.noSuchMethod(
        Invocation.setter(
          #transformer,
          _transformer,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Interceptors get interceptors => (super.noSuchMethod(
        Invocation.getter(#interceptors),
        returnValue: _FakeInterceptors_3(
          this,
          Invocation.getter(#interceptors),
        ),
        returnValueForMissingStub: _FakeInterceptors_3(
          this,
          Invocation.getter(#interceptors),
        ),
      ) as _i5.Interceptors);

  @override
  void close({bool? force = false}) => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
          {#force: force},
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i12.Future<_i6.Response<T>> head<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i13.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #head,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i12.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #head,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
        returnValueForMissingStub:
            _i12.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #head,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i12.Future<_i6.Response<T>>);

  @override
  _i12.Future<_i6.Response<T>> headUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i13.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #headUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i12.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #headUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
        returnValueForMissingStub:
            _i12.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #headUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i12.Future<_i6.Response<T>>);

  @override
  _i12.Future<_i6.Response<T>> get<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i13.CancelToken? cancelToken,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i12.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #get,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i12.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #get,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i12.Future<_i6.Response<T>>);

  @override
  _i12.Future<_i6.Response<T>> getUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i13.CancelToken? cancelToken,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i12.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #getUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i12.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #getUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i12.Future<_i6.Response<T>>);

  @override
  _i12.Future<_i6.Response<T>> post<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i13.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i12.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #post,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i12.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #post,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i12.Future<_i6.Response<T>>);

  @override
  _i12.Future<_i6.Response<T>> postUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i13.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #postUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i12.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #postUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i12.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #postUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i12.Future<_i6.Response<T>>);

  @override
  _i12.Future<_i6.Response<T>> put<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i13.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i12.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #put,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i12.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #put,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i12.Future<_i6.Response<T>>);

  @override
  _i12.Future<_i6.Response<T>> putUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i13.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #putUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i12.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #putUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i12.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #putUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i12.Future<_i6.Response<T>>);

  @override
  _i12.Future<_i6.Response<T>> patch<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i13.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i12.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #patch,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i12.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #patch,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i12.Future<_i6.Response<T>>);

  @override
  _i12.Future<_i6.Response<T>> patchUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i13.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patchUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i12.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #patchUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i12.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #patchUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i12.Future<_i6.Response<T>>);

  @override
  _i12.Future<_i6.Response<T>> delete<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i13.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i12.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #delete,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
        returnValueForMissingStub:
            _i12.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #delete,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i12.Future<_i6.Response<T>>);

  @override
  _i12.Future<_i6.Response<T>> deleteUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i13.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i12.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #deleteUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
        returnValueForMissingStub:
            _i12.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #deleteUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i12.Future<_i6.Response<T>>);

  @override
  _i12.Future<_i6.Response<dynamic>> download(
    String? urlPath,
    dynamic savePath, {
    _i2.ProgressCallback? onReceiveProgress,
    Map<String, dynamic>? queryParameters,
    _i13.CancelToken? cancelToken,
    bool? deleteOnError = true,
    String? lengthHeader = r'content-length',
    Object? data,
    _i2.Options? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #download,
          [
            urlPath,
            savePath,
          ],
          {
            #onReceiveProgress: onReceiveProgress,
            #queryParameters: queryParameters,
            #cancelToken: cancelToken,
            #deleteOnError: deleteOnError,
            #lengthHeader: lengthHeader,
            #data: data,
            #options: options,
          },
        ),
        returnValue:
            _i12.Future<_i6.Response<dynamic>>.value(_FakeResponse_4<dynamic>(
          this,
          Invocation.method(
            #download,
            [
              urlPath,
              savePath,
            ],
            {
              #onReceiveProgress: onReceiveProgress,
              #queryParameters: queryParameters,
              #cancelToken: cancelToken,
              #deleteOnError: deleteOnError,
              #lengthHeader: lengthHeader,
              #data: data,
              #options: options,
            },
          ),
        )),
        returnValueForMissingStub:
            _i12.Future<_i6.Response<dynamic>>.value(_FakeResponse_4<dynamic>(
          this,
          Invocation.method(
            #download,
            [
              urlPath,
              savePath,
            ],
            {
              #onReceiveProgress: onReceiveProgress,
              #queryParameters: queryParameters,
              #cancelToken: cancelToken,
              #deleteOnError: deleteOnError,
              #lengthHeader: lengthHeader,
              #data: data,
              #options: options,
            },
          ),
        )),
      ) as _i12.Future<_i6.Response<dynamic>>);

  @override
  _i12.Future<_i6.Response<dynamic>> downloadUri(
    Uri? uri,
    dynamic savePath, {
    _i2.ProgressCallback? onReceiveProgress,
    _i13.CancelToken? cancelToken,
    bool? deleteOnError = true,
    String? lengthHeader = r'content-length',
    Object? data,
    _i2.Options? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #downloadUri,
          [
            uri,
            savePath,
          ],
          {
            #onReceiveProgress: onReceiveProgress,
            #cancelToken: cancelToken,
            #deleteOnError: deleteOnError,
            #lengthHeader: lengthHeader,
            #data: data,
            #options: options,
          },
        ),
        returnValue:
            _i12.Future<_i6.Response<dynamic>>.value(_FakeResponse_4<dynamic>(
          this,
          Invocation.method(
            #downloadUri,
            [
              uri,
              savePath,
            ],
            {
              #onReceiveProgress: onReceiveProgress,
              #cancelToken: cancelToken,
              #deleteOnError: deleteOnError,
              #lengthHeader: lengthHeader,
              #data: data,
              #options: options,
            },
          ),
        )),
        returnValueForMissingStub:
            _i12.Future<_i6.Response<dynamic>>.value(_FakeResponse_4<dynamic>(
          this,
          Invocation.method(
            #downloadUri,
            [
              uri,
              savePath,
            ],
            {
              #onReceiveProgress: onReceiveProgress,
              #cancelToken: cancelToken,
              #deleteOnError: deleteOnError,
              #lengthHeader: lengthHeader,
              #data: data,
              #options: options,
            },
          ),
        )),
      ) as _i12.Future<_i6.Response<dynamic>>);

  @override
  _i12.Future<_i6.Response<T>> request<T>(
    String? url, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i13.CancelToken? cancelToken,
    _i2.Options? options,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #request,
          [url],
          {
            #data: data,
            #queryParameters: queryParameters,
            #cancelToken: cancelToken,
            #options: options,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i12.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #request,
            [url],
            {
              #data: data,
              #queryParameters: queryParameters,
              #cancelToken: cancelToken,
              #options: options,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i12.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #request,
            [url],
            {
              #data: data,
              #queryParameters: queryParameters,
              #cancelToken: cancelToken,
              #options: options,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i12.Future<_i6.Response<T>>);

  @override
  _i12.Future<_i6.Response<T>> requestUri<T>(
    Uri? uri, {
    Object? data,
    _i13.CancelToken? cancelToken,
    _i2.Options? options,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #requestUri,
          [uri],
          {
            #data: data,
            #cancelToken: cancelToken,
            #options: options,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i12.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #requestUri,
            [uri],
            {
              #data: data,
              #cancelToken: cancelToken,
              #options: options,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i12.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #requestUri,
            [uri],
            {
              #data: data,
              #cancelToken: cancelToken,
              #options: options,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i12.Future<_i6.Response<T>>);

  @override
  _i12.Future<_i6.Response<T>> fetch<T>(_i2.RequestOptions? requestOptions) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetch,
          [requestOptions],
        ),
        returnValue: _i12.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #fetch,
            [requestOptions],
          ),
        )),
        returnValueForMissingStub:
            _i12.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #fetch,
            [requestOptions],
          ),
        )),
      ) as _i12.Future<_i6.Response<T>>);
}

/// A class which mocks [SharedPreferences].
///
/// See the documentation for Mockito's code generation for more information.
class MockSharedPreferences extends _i1.Mock implements _i9.SharedPreferences {
  @override
  Set<String> getKeys() => (super.noSuchMethod(
        Invocation.method(
          #getKeys,
          [],
        ),
        returnValue: <String>{},
        returnValueForMissingStub: <String>{},
      ) as Set<String>);

  @override
  Object? get(String? key) => (super.noSuchMethod(
        Invocation.method(
          #get,
          [key],
        ),
        returnValueForMissingStub: null,
      ) as Object?);

  @override
  bool? getBool(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getBool,
          [key],
        ),
        returnValueForMissingStub: null,
      ) as bool?);

  @override
  int? getInt(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getInt,
          [key],
        ),
        returnValueForMissingStub: null,
      ) as int?);

  @override
  double? getDouble(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getDouble,
          [key],
        ),
        returnValueForMissingStub: null,
      ) as double?);

  @override
  String? getString(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getString,
          [key],
        ),
        returnValueForMissingStub: null,
      ) as String?);

  @override
  bool containsKey(String? key) => (super.noSuchMethod(
        Invocation.method(
          #containsKey,
          [key],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  List<String>? getStringList(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getStringList,
          [key],
        ),
        returnValueForMissingStub: null,
      ) as List<String>?);

  @override
  _i12.Future<bool> setBool(
    String? key,
    bool? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setBool,
          [
            key,
            value,
          ],
        ),
        returnValue: _i12.Future<bool>.value(false),
        returnValueForMissingStub: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);

  @override
  _i12.Future<bool> setInt(
    String? key,
    int? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setInt,
          [
            key,
            value,
          ],
        ),
        returnValue: _i12.Future<bool>.value(false),
        returnValueForMissingStub: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);

  @override
  _i12.Future<bool> setDouble(
    String? key,
    double? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setDouble,
          [
            key,
            value,
          ],
        ),
        returnValue: _i12.Future<bool>.value(false),
        returnValueForMissingStub: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);

  @override
  _i12.Future<bool> setString(
    String? key,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setString,
          [
            key,
            value,
          ],
        ),
        returnValue: _i12.Future<bool>.value(false),
        returnValueForMissingStub: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);

  @override
  _i12.Future<bool> setStringList(
    String? key,
    List<String>? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setStringList,
          [
            key,
            value,
          ],
        ),
        returnValue: _i12.Future<bool>.value(false),
        returnValueForMissingStub: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);

  @override
  _i12.Future<bool> remove(String? key) => (super.noSuchMethod(
        Invocation.method(
          #remove,
          [key],
        ),
        returnValue: _i12.Future<bool>.value(false),
        returnValueForMissingStub: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);

  @override
  _i12.Future<bool> commit() => (super.noSuchMethod(
        Invocation.method(
          #commit,
          [],
        ),
        returnValue: _i12.Future<bool>.value(false),
        returnValueForMissingStub: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);

  @override
  _i12.Future<bool> clear() => (super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValue: _i12.Future<bool>.value(false),
        returnValueForMissingStub: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);

  @override
  _i12.Future<void> reload() => (super.noSuchMethod(
        Invocation.method(
          #reload,
          [],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);
}

/// A class which mocks [Api].
///
/// See the documentation for Mockito's code generation for more information.
class MockApi extends _i1.Mock implements _i10.Api {
  @override
  _i7.SharedRefService get sharedService => (super.noSuchMethod(
        Invocation.getter(#sharedService),
        returnValue: _FakeSharedRefService_5(
          this,
          Invocation.getter(#sharedService),
        ),
        returnValueForMissingStub: _FakeSharedRefService_5(
          this,
          Invocation.getter(#sharedService),
        ),
      ) as _i7.SharedRefService);

  @override
  _i8.Dio get api => (super.noSuchMethod(
        Invocation.getter(#api),
        returnValue: _FakeDio_6(
          this,
          Invocation.getter(#api),
        ),
        returnValueForMissingStub: _FakeDio_6(
          this,
          Invocation.getter(#api),
        ),
      ) as _i8.Dio);

  @override
  String get hostName => (super.noSuchMethod(
        Invocation.getter(#hostName),
        returnValue: _i14.dummyValue<String>(
          this,
          Invocation.getter(#hostName),
        ),
        returnValueForMissingStub: _i14.dummyValue<String>(
          this,
          Invocation.getter(#hostName),
        ),
      ) as String);

  @override
  _i12.Future<_i15.Option<String>> getRefreshToken() => (super.noSuchMethod(
        Invocation.method(
          #getRefreshToken,
          [],
        ),
        returnValue: _i12.Future<_i15.Option<String>>.value(
            _i14.dummyValue<_i15.Option<String>>(
          this,
          Invocation.method(
            #getRefreshToken,
            [],
          ),
        )),
        returnValueForMissingStub: _i12.Future<_i15.Option<String>>.value(
            _i14.dummyValue<_i15.Option<String>>(
          this,
          Invocation.method(
            #getRefreshToken,
            [],
          ),
        )),
      ) as _i12.Future<_i15.Option<String>>);
}

/// A class which mocks [SharedRefService].
///
/// See the documentation for Mockito's code generation for more information.
class MockSharedRefService extends _i1.Mock implements _i7.SharedRefService {
  @override
  _i12.Future<_i9.SharedPreferences> get() => (super.noSuchMethod(
        Invocation.method(
          #get,
          [],
        ),
        returnValue:
            _i12.Future<_i9.SharedPreferences>.value(_FakeSharedPreferences_7(
          this,
          Invocation.method(
            #get,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i12.Future<_i9.SharedPreferences>.value(_FakeSharedPreferences_7(
          this,
          Invocation.method(
            #get,
            [],
          ),
        )),
      ) as _i12.Future<_i9.SharedPreferences>);

  @override
  _i12.Future<_i15.Option<_i15.Unit>> setToken(String? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #setToken,
          [token],
        ),
        returnValue: _i12.Future<_i15.Option<_i15.Unit>>.value(
            _i14.dummyValue<_i15.Option<_i15.Unit>>(
          this,
          Invocation.method(
            #setToken,
            [token],
          ),
        )),
        returnValueForMissingStub: _i12.Future<_i15.Option<_i15.Unit>>.value(
            _i14.dummyValue<_i15.Option<_i15.Unit>>(
          this,
          Invocation.method(
            #setToken,
            [token],
          ),
        )),
      ) as _i12.Future<_i15.Option<_i15.Unit>>);

  @override
  _i12.Future<String> getToken() => (super.noSuchMethod(
        Invocation.method(
          #getToken,
          [],
        ),
        returnValue: _i12.Future<String>.value(_i14.dummyValue<String>(
          this,
          Invocation.method(
            #getToken,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i12.Future<String>.value(_i14.dummyValue<String>(
          this,
          Invocation.method(
            #getToken,
            [],
          ),
        )),
      ) as _i12.Future<String>);

  @override
  _i12.Future<_i15.Unit> removeToken() => (super.noSuchMethod(
        Invocation.method(
          #removeToken,
          [],
        ),
        returnValue: _i12.Future<_i15.Unit>.value(_i14.dummyValue<_i15.Unit>(
          this,
          Invocation.method(
            #removeToken,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i12.Future<_i15.Unit>.value(_i14.dummyValue<_i15.Unit>(
          this,
          Invocation.method(
            #removeToken,
            [],
          ),
        )),
      ) as _i12.Future<_i15.Unit>);

  @override
  _i12.Future<_i15.Option<_i15.Unit>> setRefreshToken(String? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #setRefreshToken,
          [token],
        ),
        returnValue: _i12.Future<_i15.Option<_i15.Unit>>.value(
            _i14.dummyValue<_i15.Option<_i15.Unit>>(
          this,
          Invocation.method(
            #setRefreshToken,
            [token],
          ),
        )),
        returnValueForMissingStub: _i12.Future<_i15.Option<_i15.Unit>>.value(
            _i14.dummyValue<_i15.Option<_i15.Unit>>(
          this,
          Invocation.method(
            #setRefreshToken,
            [token],
          ),
        )),
      ) as _i12.Future<_i15.Option<_i15.Unit>>);

  @override
  _i12.Future<String> getRefreshToken() => (super.noSuchMethod(
        Invocation.method(
          #getRefreshToken,
          [],
        ),
        returnValue: _i12.Future<String>.value(_i14.dummyValue<String>(
          this,
          Invocation.method(
            #getRefreshToken,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i12.Future<String>.value(_i14.dummyValue<String>(
          this,
          Invocation.method(
            #getRefreshToken,
            [],
          ),
        )),
      ) as _i12.Future<String>);

  @override
  _i12.Future<_i15.Unit> removeRefreshToken() => (super.noSuchMethod(
        Invocation.method(
          #removeRefreshToken,
          [],
        ),
        returnValue: _i12.Future<_i15.Unit>.value(_i14.dummyValue<_i15.Unit>(
          this,
          Invocation.method(
            #removeRefreshToken,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i12.Future<_i15.Unit>.value(_i14.dummyValue<_i15.Unit>(
          this,
          Invocation.method(
            #removeRefreshToken,
            [],
          ),
        )),
      ) as _i12.Future<_i15.Unit>);

  @override
  _i12.Future<_i15.Option<_i15.Unit>> saveId(String? uuid) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveId,
          [uuid],
        ),
        returnValue: _i12.Future<_i15.Option<_i15.Unit>>.value(
            _i14.dummyValue<_i15.Option<_i15.Unit>>(
          this,
          Invocation.method(
            #saveId,
            [uuid],
          ),
        )),
        returnValueForMissingStub: _i12.Future<_i15.Option<_i15.Unit>>.value(
            _i14.dummyValue<_i15.Option<_i15.Unit>>(
          this,
          Invocation.method(
            #saveId,
            [uuid],
          ),
        )),
      ) as _i12.Future<_i15.Option<_i15.Unit>>);
}

/// A class which mocks [AuthService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthService extends _i1.Mock implements _i16.AuthService {
  @override
  _i8.Dio get api => (super.noSuchMethod(
        Invocation.getter(#api),
        returnValue: _FakeDio_6(
          this,
          Invocation.getter(#api),
        ),
        returnValueForMissingStub: _FakeDio_6(
          this,
          Invocation.getter(#api),
        ),
      ) as _i8.Dio);

  @override
  String get hostName => (super.noSuchMethod(
        Invocation.getter(#hostName),
        returnValue: _i14.dummyValue<String>(
          this,
          Invocation.getter(#hostName),
        ),
        returnValueForMissingStub: _i14.dummyValue<String>(
          this,
          Invocation.getter(#hostName),
        ),
      ) as String);

  @override
  _i10.Api get apiService => (super.noSuchMethod(
        Invocation.getter(#apiService),
        returnValue: _FakeApi_8(
          this,
          Invocation.getter(#apiService),
        ),
        returnValueForMissingStub: _FakeApi_8(
          this,
          Invocation.getter(#apiService),
        ),
      ) as _i10.Api);

  @override
  _i7.SharedRefService get sharedService => (super.noSuchMethod(
        Invocation.getter(#sharedService),
        returnValue: _FakeSharedRefService_5(
          this,
          Invocation.getter(#sharedService),
        ),
        returnValueForMissingStub: _FakeSharedRefService_5(
          this,
          Invocation.getter(#sharedService),
        ),
      ) as _i7.SharedRefService);

  @override
  _i12.Future<_i15.Unit> signInEmailPassword({
    required _i17.EmailAddress? emailAddress,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInEmailPassword,
          [],
          {
            #emailAddress: emailAddress,
            #password: password,
          },
        ),
        returnValue: _i12.Future<_i15.Unit>.value(_i14.dummyValue<_i15.Unit>(
          this,
          Invocation.method(
            #signInEmailPassword,
            [],
            {
              #emailAddress: emailAddress,
              #password: password,
            },
          ),
        )),
        returnValueForMissingStub:
            _i12.Future<_i15.Unit>.value(_i14.dummyValue<_i15.Unit>(
          this,
          Invocation.method(
            #signInEmailPassword,
            [],
            {
              #emailAddress: emailAddress,
              #password: password,
            },
          ),
        )),
      ) as _i12.Future<_i15.Unit>);

  @override
  _i12.Future<_i11.User> getUser() => (super.noSuchMethod(
        Invocation.method(
          #getUser,
          [],
        ),
        returnValue: _i12.Future<_i11.User>.value(_FakeUser_9(
          this,
          Invocation.method(
            #getUser,
            [],
          ),
        )),
        returnValueForMissingStub: _i12.Future<_i11.User>.value(_FakeUser_9(
          this,
          Invocation.method(
            #getUser,
            [],
          ),
        )),
      ) as _i12.Future<_i11.User>);

  @override
  _i12.Future<_i15.Unit> signOut() => (super.noSuchMethod(
        Invocation.method(
          #signOut,
          [],
        ),
        returnValue: _i12.Future<_i15.Unit>.value(_i14.dummyValue<_i15.Unit>(
          this,
          Invocation.method(
            #signOut,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i12.Future<_i15.Unit>.value(_i14.dummyValue<_i15.Unit>(
          this,
          Invocation.method(
            #signOut,
            [],
          ),
        )),
      ) as _i12.Future<_i15.Unit>);

  @override
  _i12.Future<_i11.User> getCurrentUser() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentUser,
          [],
        ),
        returnValue: _i12.Future<_i11.User>.value(_FakeUser_9(
          this,
          Invocation.method(
            #getCurrentUser,
            [],
          ),
        )),
        returnValueForMissingStub: _i12.Future<_i11.User>.value(_FakeUser_9(
          this,
          Invocation.method(
            #getCurrentUser,
            [],
          ),
        )),
      ) as _i12.Future<_i11.User>);

  @override
  _i12.Future<_i18.StudyType> getStudyType() => (super.noSuchMethod(
        Invocation.method(
          #getStudyType,
          [],
        ),
        returnValue: _i12.Future<_i18.StudyType>.value(_i18.StudyType.ai),
        returnValueForMissingStub:
            _i12.Future<_i18.StudyType>.value(_i18.StudyType.ai),
      ) as _i12.Future<_i18.StudyType>);

  @override
  _i12.Future<_i15.Unit> setCurrentUser(_i11.User? user) => (super.noSuchMethod(
        Invocation.method(
          #setCurrentUser,
          [user],
        ),
        returnValue: _i12.Future<_i15.Unit>.value(_i14.dummyValue<_i15.Unit>(
          this,
          Invocation.method(
            #setCurrentUser,
            [user],
          ),
        )),
        returnValueForMissingStub:
            _i12.Future<_i15.Unit>.value(_i14.dummyValue<_i15.Unit>(
          this,
          Invocation.method(
            #setCurrentUser,
            [user],
          ),
        )),
      ) as _i12.Future<_i15.Unit>);

  @override
  _i12.Future<_i15.Unit> signUp({
    required _i17.EmailAddress? email,
    required _i17.Password? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signUp,
          [],
          {
            #email: email,
            #password: password,
          },
        ),
        returnValue: _i12.Future<_i15.Unit>.value(_i14.dummyValue<_i15.Unit>(
          this,
          Invocation.method(
            #signUp,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
        returnValueForMissingStub:
            _i12.Future<_i15.Unit>.value(_i14.dummyValue<_i15.Unit>(
          this,
          Invocation.method(
            #signUp,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
      ) as _i12.Future<_i15.Unit>);

  @override
  _i12.Future<_i15.Unit> requestResetPassword(_i17.EmailAddress? email) =>
      (super.noSuchMethod(
        Invocation.method(
          #requestResetPassword,
          [email],
        ),
        returnValue: _i12.Future<_i15.Unit>.value(_i14.dummyValue<_i15.Unit>(
          this,
          Invocation.method(
            #requestResetPassword,
            [email],
          ),
        )),
        returnValueForMissingStub:
            _i12.Future<_i15.Unit>.value(_i14.dummyValue<_i15.Unit>(
          this,
          Invocation.method(
            #requestResetPassword,
            [email],
          ),
        )),
      ) as _i12.Future<_i15.Unit>);

  @override
  _i12.Future<_i15.Unit> newPassword({
    required _i17.EmailAddress? email,
    required _i17.Password? password,
    required String? code,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #newPassword,
          [],
          {
            #email: email,
            #password: password,
            #code: code,
          },
        ),
        returnValue: _i12.Future<_i15.Unit>.value(_i14.dummyValue<_i15.Unit>(
          this,
          Invocation.method(
            #newPassword,
            [],
            {
              #email: email,
              #password: password,
              #code: code,
            },
          ),
        )),
        returnValueForMissingStub:
            _i12.Future<_i15.Unit>.value(_i14.dummyValue<_i15.Unit>(
          this,
          Invocation.method(
            #newPassword,
            [],
            {
              #email: email,
              #password: password,
              #code: code,
            },
          ),
        )),
      ) as _i12.Future<_i15.Unit>);

  @override
  _i12.Future<_i15.Option<_i15.Unit>> setToken(String? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #setToken,
          [token],
        ),
        returnValue: _i12.Future<_i15.Option<_i15.Unit>>.value(
            _i14.dummyValue<_i15.Option<_i15.Unit>>(
          this,
          Invocation.method(
            #setToken,
            [token],
          ),
        )),
        returnValueForMissingStub: _i12.Future<_i15.Option<_i15.Unit>>.value(
            _i14.dummyValue<_i15.Option<_i15.Unit>>(
          this,
          Invocation.method(
            #setToken,
            [token],
          ),
        )),
      ) as _i12.Future<_i15.Option<_i15.Unit>>);

  @override
  _i12.Future<String> getToken() => (super.noSuchMethod(
        Invocation.method(
          #getToken,
          [],
        ),
        returnValue: _i12.Future<String>.value(_i14.dummyValue<String>(
          this,
          Invocation.method(
            #getToken,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i12.Future<String>.value(_i14.dummyValue<String>(
          this,
          Invocation.method(
            #getToken,
            [],
          ),
        )),
      ) as _i12.Future<String>);

  @override
  _i12.Future<_i15.Unit> removeToken() => (super.noSuchMethod(
        Invocation.method(
          #removeToken,
          [],
        ),
        returnValue: _i12.Future<_i15.Unit>.value(_i14.dummyValue<_i15.Unit>(
          this,
          Invocation.method(
            #removeToken,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i12.Future<_i15.Unit>.value(_i14.dummyValue<_i15.Unit>(
          this,
          Invocation.method(
            #removeToken,
            [],
          ),
        )),
      ) as _i12.Future<_i15.Unit>);

  @override
  _i12.Future<_i15.Option<_i15.Unit>> setRefreshToken(String? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #setRefreshToken,
          [token],
        ),
        returnValue: _i12.Future<_i15.Option<_i15.Unit>>.value(
            _i14.dummyValue<_i15.Option<_i15.Unit>>(
          this,
          Invocation.method(
            #setRefreshToken,
            [token],
          ),
        )),
        returnValueForMissingStub: _i12.Future<_i15.Option<_i15.Unit>>.value(
            _i14.dummyValue<_i15.Option<_i15.Unit>>(
          this,
          Invocation.method(
            #setRefreshToken,
            [token],
          ),
        )),
      ) as _i12.Future<_i15.Option<_i15.Unit>>);

  @override
  _i12.Future<String> getRefreshToken() => (super.noSuchMethod(
        Invocation.method(
          #getRefreshToken,
          [],
        ),
        returnValue: _i12.Future<String>.value(_i14.dummyValue<String>(
          this,
          Invocation.method(
            #getRefreshToken,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i12.Future<String>.value(_i14.dummyValue<String>(
          this,
          Invocation.method(
            #getRefreshToken,
            [],
          ),
        )),
      ) as _i12.Future<String>);

  @override
  _i12.Future<_i15.Unit> removeRefreshToken() => (super.noSuchMethod(
        Invocation.method(
          #removeRefreshToken,
          [],
        ),
        returnValue: _i12.Future<_i15.Unit>.value(_i14.dummyValue<_i15.Unit>(
          this,
          Invocation.method(
            #removeRefreshToken,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i12.Future<_i15.Unit>.value(_i14.dummyValue<_i15.Unit>(
          this,
          Invocation.method(
            #removeRefreshToken,
            [],
          ),
        )),
      ) as _i12.Future<_i15.Unit>);

  @override
  _i12.Future<_i15.Option<_i15.Unit>> saveId(String? uuid) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveId,
          [uuid],
        ),
        returnValue: _i12.Future<_i15.Option<_i15.Unit>>.value(
            _i14.dummyValue<_i15.Option<_i15.Unit>>(
          this,
          Invocation.method(
            #saveId,
            [uuid],
          ),
        )),
        returnValueForMissingStub: _i12.Future<_i15.Option<_i15.Unit>>.value(
            _i14.dummyValue<_i15.Option<_i15.Unit>>(
          this,
          Invocation.method(
            #saveId,
            [uuid],
          ),
        )),
      ) as _i12.Future<_i15.Option<_i15.Unit>>);

  @override
  _i12.Future<String> getId() => (super.noSuchMethod(
        Invocation.method(
          #getId,
          [],
        ),
        returnValue: _i12.Future<String>.value(_i14.dummyValue<String>(
          this,
          Invocation.method(
            #getId,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i12.Future<String>.value(_i14.dummyValue<String>(
          this,
          Invocation.method(
            #getId,
            [],
          ),
        )),
      ) as _i12.Future<String>);

  @override
  _i12.Future<_i15.Option<dynamic>> saveEmail(String? email) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveEmail,
          [email],
        ),
        returnValue: _i12.Future<_i15.Option<dynamic>>.value(
            _i14.dummyValue<_i15.Option<dynamic>>(
          this,
          Invocation.method(
            #saveEmail,
            [email],
          ),
        )),
        returnValueForMissingStub: _i12.Future<_i15.Option<dynamic>>.value(
            _i14.dummyValue<_i15.Option<dynamic>>(
          this,
          Invocation.method(
            #saveEmail,
            [email],
          ),
        )),
      ) as _i12.Future<_i15.Option<dynamic>>);

  @override
  _i12.Future<String> getEmail() => (super.noSuchMethod(
        Invocation.method(
          #getEmail,
          [],
        ),
        returnValue: _i12.Future<String>.value(_i14.dummyValue<String>(
          this,
          Invocation.method(
            #getEmail,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i12.Future<String>.value(_i14.dummyValue<String>(
          this,
          Invocation.method(
            #getEmail,
            [],
          ),
        )),
      ) as _i12.Future<String>);
}

/// A class which mocks [NavigationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNavigationService extends _i1.Mock implements _i19.NavigationService {
  MockNavigationService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i12.Future<void> saveRedirecPath(dynamic path) => (super.noSuchMethod(
        Invocation.method(
          #saveRedirecPath,
          [path],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);
}
